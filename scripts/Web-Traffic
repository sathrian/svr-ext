#!/bin/bash
#
# Web traffic generating script.
#
# Version 9-06-2019.a
# Bill Claunch
# Palo Alto Networks, Inc.
#
# Official Use Only
#
# This script replays packet capture files using tcpreplay.
# These pcaps contain traffic generated by requesting various URLs using
# curl and several different source IP addresses.
#
# The script first uploads User-ID information to firewall-a so students can
# see various applications along with specific User-ID entries in the
# Traffic Log and within Custom Reports.
#
# The URLs visited also include games, weapons, and gambling sites.
#
# Set colors
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' #No color

clear
######################################################################################################
# Get Key from Firewall-A and write to Akeyfile.txt
######################################################################################################
clear
echo -e "Get ${RED}API ${NC}key for ${GREEN}Firewall-A.${NC}"
echo ""
curl -k -X GET "https://192.168.1.254/api/?type=keygen&user=admin&password=Pal0Alt0!" >Akeyfile.txt
                # clean up extraneous characters in API response to leave only key
                # Remove > characters 
                sed --in-place "s/>/ /g" Akeyfile.txt
                # Remove < characters
                sed --in-place "s/</ /g" Akeyfile.txt
                # Remove single quotes
                sed --in-place "s/'/ /g" Akeyfile.txt
                # Remove extraneous text before key
                sed --in-place 's/ response status =  success   result  key //g' Akeyfile.txt
                # Remove slashes
                sed --in-place 's/\///g' Akeyfile.txt
                # Remove extraneous text after key
                sed --in-place 's/ key  result  response //g' Akeyfile.txt
#                echo "Your key is below:"
#                echo ""
#                cat Akeyfile.txt
#                echo ""
#                echo ""
#                echo "The key is also stored in the current directory as " Akeyfile.txt
#                echo ""
#                echo -n "Press enter to proceed"
echo "Done."
######################################################################################################
# Read Akeyfile.txt into variable.
######################################################################################################
# read API key for FirewallA from Akeyfile.txt into variable
                tempkeyA=`cat Akeyfile.txt`
######################################################################################################
echo ""
echo "Sending User-ID information to firewall-a"
echo ""
sudo curl -k -F key=$tempkeyA --form file=@/home/paloalto42/userID/Ausers.xml "https://192.168.50.1/api/?type=user-id" > /home/paloalto42/empty.txt
echo "Process Complete."
echo ""
rm /home/paloalto42/empty*
starttime=$SECONDS
elapsedtime=$starttime-$endtime
clear
echo "==============================================================="
echo "This script runs packet captures to simulate live traffic."
echo ""
echo "This simulated traffic does not leave the lab environment since"
echo "it is generated only within a limited vWire deployment."
echo ""
echo "The simulated traffic should match a variety of URLs which you "
echo "can see in the URL Filtering Log and in Custom Reports."
echo ""
echo "The script will take about 10 minutes."
echo ""
echo "==============================================================="
echo ""
# read -p "Press Enter to Continue..."

echo "Application script started at "$(date) >> /home/paloalto42/Script.Ran.txt
sudo tcpreplay --intf1=ens224 --pps=350 URL-1.pcapng
sudo tcpreplay --intf1=ens224 --pps=350 URL-2.pcapng
sudo tcpreplay --intf1=ens224 --pps=350 URL-3.pcapng
sudo tcpreplay --intf1=ens224 --pps=350 URL-4.pcapng
endtime=$SECONDS
elapsedtime=$(( endtime - starttime ))
echo "Elapsed time for this script was "$elapsedtime" seconds."
# echo "Application script completed at "$(date) >> /home/paloalto42/Script.Ran.txt
echo ""
clear
echo ""
echo "Elapsed time for this script was "$elapsedtime" seconds."
echo ""
echo ""
echo "#########################"
echo "#                       #"
echo "#   Process Complete !  #"
echo "#                       #"
echo "#########################"
